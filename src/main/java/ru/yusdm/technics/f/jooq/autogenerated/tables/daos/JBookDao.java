/*
 * This file is generated by jOOQ.
 */
package ru.yusdm.technics.f.jooq.autogenerated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.yusdm.technics.f.jooq.autogenerated.tables.JBook;
import ru.yusdm.technics.f.jooq.autogenerated.tables.pojos.JpjBook;
import ru.yusdm.technics.f.jooq.autogenerated.tables.records.JBookRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JBookDao extends DAOImpl<JBookRecord, JpjBook, Long> {

    /**
     * Create a new JBookDao without any configuration
     */
    public JBookDao() {
        super(JBook.BOOK, JpjBook.class);
    }

    /**
     * Create a new JBookDao with an attached configuration
     */
    public JBookDao(Configuration configuration) {
        super(JBook.BOOK, JpjBook.class, configuration);
    }

    @Override
    public Long getId(JpjBook object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JpjBook> fetchRangeOfJId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JBook.BOOK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<JpjBook> fetchByJId(Long... values) {
        return fetch(JBook.BOOK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public JpjBook fetchOneByJId(Long value) {
        return fetchOne(JBook.BOOK.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JpjBook> fetchRangeOfJName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBook.BOOK.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<JpjBook> fetchByJName(String... values) {
        return fetch(JBook.BOOK.NAME, values);
    }
}
