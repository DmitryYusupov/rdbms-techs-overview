/*
 * This file is generated by jOOQ.
 */
package ru.yusdm.technics.f.jooq.autogenerated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ru.yusdm.technics.f.jooq.autogenerated.tables.JBookDescription;
import ru.yusdm.technics.f.jooq.autogenerated.tables.pojos.JpjBookDescription;
import ru.yusdm.technics.f.jooq.autogenerated.tables.records.JBookDescriptionRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JBookDescriptionDao extends DAOImpl<JBookDescriptionRecord, JpjBookDescription, Long> {

    /**
     * Create a new JBookDescriptionDao without any configuration
     */
    public JBookDescriptionDao() {
        super(JBookDescription.BOOK_DESCRIPTION, JpjBookDescription.class);
    }

    /**
     * Create a new JBookDescriptionDao with an attached configuration
     */
    public JBookDescriptionDao(Configuration configuration) {
        super(JBookDescription.BOOK_DESCRIPTION, JpjBookDescription.class, configuration);
    }

    @Override
    public Long getId(JpjBookDescription object) {
        return object.getBookId();
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JpjBookDescription> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBookDescription.BOOK_DESCRIPTION.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<JpjBookDescription> fetchByJDescription(String... values) {
        return fetch(JBookDescription.BOOK_DESCRIPTION.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<JpjBookDescription> fetchRangeOfJBookId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JBookDescription.BOOK_DESCRIPTION.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<JpjBookDescription> fetchByJBookId(Long... values) {
        return fetch(JBookDescription.BOOK_DESCRIPTION.BOOK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>book_id = value</code>
     */
    public JpjBookDescription fetchOneByJBookId(Long value) {
        return fetchOne(JBookDescription.BOOK_DESCRIPTION.BOOK_ID, value);
    }
}
