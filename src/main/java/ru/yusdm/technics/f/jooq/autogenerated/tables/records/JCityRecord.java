/*
 * This file is generated by jOOQ.
 */
package ru.yusdm.technics.f.jooq.autogenerated.tables.records;


import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.yusdm.technics.f.jooq.autogenerated.tables.JCity;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCityRecord extends UpdatableRecordImpl<JCityRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 1224467084;

    /**
     * Setter for <code>public.city.id</code>.
     */
    public JCityRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.city.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.city.main_street</code>.
     */
    public JCityRecord setMainStreet(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.city.main_street</code>.
     */
    @Size(max = 255)
    public String getMainStreet() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.city.name</code>.
     */
    public JCityRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.city.name</code>.
     */
    @Size(max = 255)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.city.country_id</code>.
     */
    public JCityRecord setCountryId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.city.country_id</code>.
     */
    public Long getCountryId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JCity.CITY.ID;
    }

    @Override
    public Field<String> field2() {
        return JCity.CITY.MAIN_STREET;
    }

    @Override
    public Field<String> field3() {
        return JCity.CITY.NAME;
    }

    @Override
    public Field<Long> field4() {
        return JCity.CITY.COUNTRY_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMainStreet();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Long component4() {
        return getCountryId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMainStreet();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Long value4() {
        return getCountryId();
    }

    @Override
    public JCityRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JCityRecord value2(String value) {
        setMainStreet(value);
        return this;
    }

    @Override
    public JCityRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public JCityRecord value4(Long value) {
        setCountryId(value);
        return this;
    }

    @Override
    public JCityRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JCityRecord
     */
    public JCityRecord() {
        super(JCity.CITY);
    }

    /**
     * Create a detached, initialised JCityRecord
     */
    public JCityRecord(Long id, String mainStreet, String name, Long countryId) {
        super(JCity.CITY);

        set(0, id);
        set(1, mainStreet);
        set(2, name);
        set(3, countryId);
    }
}
